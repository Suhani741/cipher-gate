{
  "name": "cipher-gate",
  "version": "1.0.0",
  "description": "Secure File Sharing with AI Risk Scoring",
  "main": "server/index.js",
  "scripts": {
    "start": "node server/index.js",
    "server": "nodemon server/index.js",
    "client": "npm start --prefix client",
    "dev": "concurrently \"npm run server\" \"npm run client\"",
    "test": "cross-env NODE_ENV=test jest --detectOpenHandles --forceExit",
    "test:watch": "npm test -- --watch",
    "test:coverage": "npm test -- --coverage",
    "test:unit": "npm test -- tests/unit",
    "test:integration": "npm test -- tests/integration",
    "test:e2e": "npm test -- tests/e2e",
    "lint": "eslint . --ext .js,.jsx",
    "lint:fix": "eslint . --ext .js,.jsx --fix"
  },
  "keywords": [
    "file-sharing",
    "security",
    "ai",
    "encryption"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "express-fileupload": "^1.5.2",
    "helmet": "^8.1.0",
    "jsonwebtoken": "^9.0.0",
    "mongoose": "^7.0.3",
    "morgan": "^1.10.1",
    "multer": "^1.4.5-lts.1",
    "winston": "^3.8.2"
  },
  "devDependencies": {
    "@babel/core": "^7.21.0",
    "@babel/preset-env": "^7.20.2",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "chai-http": "^4.3.0",
    "concurrently": "^7.6.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.34.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.27.5",
    "jest": "^29.4.1",
    "mocha": "^10.2.0",
    "mongodb-memory-server": "^8.16.1",
    "nodemon": "^2.0.20",
    "sinon": "^15.0.1",
    "supertest": "^6.3.3"
  },
  "jest": {
    "testEnvironment": "node",
    "setupFilesAfterEnv": [
      "<rootDir>/server/tests/setup.js"
    ],
    "testMatch": [
      "**/__tests__/**/*.test.js",
      "**/?(*.)+(spec|test).js"
    ],
    "collectCoverageFrom": [
      "server/**/*.js",
      "!**/node_modules/**",
      "!**/tests/**",
      "!**/coverage/**",
      "!**/mocks/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  }
}
